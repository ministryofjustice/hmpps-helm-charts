{{- if .Values.ingressAlertsEnabled -}}
{{- $targetNamespace := .Release.Namespace }}
{{- $targetApplication := required "A value for targetApplication must be set" .Values.targetApplication }}
{{- $defaultTargetIngress := print .Values.targetApplication ".*" }}
{{- $targetIngress := default $defaultTargetIngress .Values.ingressTargetOverride }}
{{- $modSecBlockingStatusCode := default "406" .Values.modSecBlockingStatusCodeOverride }}
{{- $targetApplicationBusinessHours := printf "and ON() %s:business_hours" .Values.targetApplication | replace "-" "_" }}
{{- $businessOrAllHoursExpression := ternary $targetApplicationBusinessHours "" .Values.businessHoursOnly}}
---
apiVersion: monitoring.coreos.com/v1
kind: PrometheusRule
metadata:
  name: {{ $targetApplication }}-ingress
  labels:
    {{- include "generic-prometheus-alerts.labels" . | nindent 4 }}
spec:
  groups:
    - name: {{ $targetApplication }}-ingress
      rules:
        - alert: 5xxErrorResponses
          annotations:
            message: Ingress {{`{{`}} $labels.exported_namespace {{`}}`}}/{{`{{`}} $labels.ingress {{`}}`}} is serving 5xx responses.
            runbook_url: {{ .Values.runbookUrl }}ingress-5xx-error-responses
            dashboard_url: {{ $.Values.grafanaUrl }}/d/golden-signals/golden-signals?orgId=1&var-namespace={{ $targetNamespace }}&var-service={{ $targetApplication }}
          expr: |-
            avg(rate(nginx_ingress_controller_requests{exported_namespace=~"{{ $targetNamespace }}", ingress=~"{{ $targetIngress }}", status=~"5.*"}[{{ .Values.ingress5xxErrorWindowMinutes }}m]) > 0) by (ingress, exported_namespace)
            {{ $businessOrAllHoursExpression }}
          for: 1m
          labels:
            severity: {{ .Values.alertSeverity }}
        - alert: High503ErrorRateOnHealthEndpoint
          annotations:
            message: High rate of 503 errors detected on /health path in Ingress {{`{{`}} $labels.exported_namespace {{`}}`}}/{{`{{`}} $labels.ingress {{`}}`}}.
            runbook_url: {{ .Values.runbookUrl }}ingress-503-error-responses
            dashboard_url: {{ $.Values.grafanaUrl }}/d/golden-signals/golden-signals?orgId=1&var-namespace={{ $targetNamespace }}&var-service={{ $targetApplication }}
          expr: |-
            avg(rate(nginx_ingress_controller_requests{exported_namespace=~"{{ .Values.nonProdNamespacePattern }}", ingress=~"{{ $targetIngress }}", path=~"/health", status=~"503"}[{{ .Values.ingress503ErrorWindowMinutes }}m]) > 0.1) by (ingress, exported_namespace)
            {{ $businessOrAllHoursExpression }}
          for: 5m
          labels:
            severity: {{ .Values.alertSeverity }}    
        - alert: RatelimitBlocking
          annotations:
            message: Rate limit is being applied on ingress {{`{{`}} $labels.exported_namespace {{`}}`}}/{{`{{`}} $labels.ingress {{`}}`}}.
            runbook_url: {{ .Values.runbookUrl }}ingress-rate-limiting
            dashboard_url: {{ $.Values.grafanaUrl }}/d/golden-signals/golden-signals?orgId=1&var-namespace={{ $targetNamespace }}&var-service={{ $targetApplication }}
          expr: |-
            avg(rate(nginx_ingress_controller_requests{exported_namespace=~"{{ $targetNamespace }}", ingress=~"{{ $targetIngress }}", status="429"}[1m]) > 0) by (ingress, exported_namespace)
            {{ $businessOrAllHoursExpression }}
          for: 1m
          labels:
            severity: {{ .Values.alertSeverity }}
        - alert: ModSecurityBlocking
          annotations:
            message: Mod_Security is blocking ingress {{`{{`}} $labels.exported_namespace {{`}}`}}/{{`{{`}} $labels.ingress {{`}}`}}. Blocking http requests at rate of {{`{{`}} printf "%.2f" $value {{`}}`}} per second.
            runbook_url: {{ .Values.runbookUrl }}ingress-modsecurity-blocking
            dashboard_url: {{ $.Values.grafanaUrl }}/d/golden-signals/golden-signals?orgId=1&var-namespace={{ $targetNamespace }}&var-service={{ $targetApplication }}
          expr: |-
            avg(rate(nginx_ingress_controller_requests{exported_namespace=~"{{ $targetNamespace }}", ingress=~"{{ $targetIngress }}", status="{{ $modSecBlockingStatusCode }}"}[1m]) > 0.33) by (ingress, exported_namespace)
            {{ $businessOrAllHoursExpression }}
          for: 1m
          labels:
            severity: {{ .Values.alertSeverity }}
{{- end }}
