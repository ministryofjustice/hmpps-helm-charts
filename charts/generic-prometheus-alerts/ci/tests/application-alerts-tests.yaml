---
rule_files:
  - ../application-alerts.yaml

evaluation_interval: 5m

tests:
  ##
  ## recording rules:
  ##   - job:kube_job_status_start_time_<namespace>:max (last start time of a cronjob run)
  ##   - job:kube_job_status_failed_<namespace>:sum (did the last job - in a cronjob - fail?)
  ## alert:
  ##   - CronJobStatusFailed - did the last run of a cronjob fail?
  ##

  # example one - two jobs (from the same cronjob) have run and failed
  - interval: 5m
    input_series:
      - series: 'kube_job_status_failed{job="kube-state-metrics", job_name="test-application-cronjob-1", namespace="test-application-dev", reason="BackoffLimitExceeded"}'
        values: '1+0x12'
      - series: 'kube_job_status_start_time{job="kube-state-metrics", job_name="test-application-cronjob-1", namespace="test-application-dev"}'
        values: '0+0x12'
      - series: 'kube_job_owner{job="kube-state-metrics", job_name="test-application-cronjob-1", namespace="test-application-dev", owner_kind="CronJob", owner_name="test-application-cronjob"}'
        values: '1+1x12'
      - series: 'kube_cronjob_spec_suspend{cronjob="test-application-cronjob", job="kube-state-metrics", namespace="test-application-dev"}'
        values: '0+0x12'

      - series: 'kube_job_status_failed{job="kube-state-metrics", job_name="test-application-cronjob-2", namespace="test-application-dev", reason="DeadLineExceeded"}'
        values: '1+0x12'
      - series: 'kube_job_status_start_time{job="kube-state-metrics", job_name="test-application-cronjob-2", namespace="test-application-dev"}'
        values: '900+0x12'
      - series: 'kube_job_owner{job="kube-state-metrics", job_name="test-application-cronjob-2", namespace="test-application-dev", owner_kind="CronJob", owner_name="test-application-cronjob"}'
        values: '1+1x12'
      - series: 'kube_cronjob_spec_suspend{cronjob="test-application-cronjob", job="kube-state-metrics", namespace="test-application-dev"}'
        values: '0+0x12'

    promql_expr_test:
      # assert we're getting the timestamp of the last ran job...
      - expr: job:kube_job_status_start_time_test_application_dev:max
        eval_time: 0m
        exp_samples:
          - labels: 'job:kube_job_status_start_time_test_application_dev:max{cronjob="test-application-cronjob", job="test-application-cronjob-2", job_name="test-application-cronjob-2", namespace="test-application-dev", owner_name="test-application-cronjob"}'
            value: 900

      # assert that the last ran job failed
      - expr: job:kube_job_status_failed_test_application_dev:sum
        eval_time: 0m
        exp_samples:
          - labels: 'job:kube_job_status_failed_test_application_dev:sum{cronjob="test-application-cronjob", job="test-application-cronjob-2", job_name="test-application-cronjob-2", namespace="test-application-dev", owner_name="test-application-cronjob"}'
            value: 1

    alert_rule_test:
      # assert that the CronJobStatusFailed alert is firing
      - eval_time: 35m
        alertname: CronJobStatusFailed
        exp_alerts:
          - exp_labels:
              cronjob: test-application-cronjob
              job: test-application-cronjob-2
              job_name: test-application-cronjob-2
              namespace: test-application-dev
              owner_name: test-application-cronjob
              severity: alert-severity-tag
            exp_annotations:
              message: CronJob test-application-dev/test-application-cronjob is failing.
              runbook_url: https://runbook.com/application-cronjob-failed
              dashboard_url: https://grafana.live.cloud-platform.service.justice.gov.uk/d/application-alerts/application-alerts?orgId=1&var-namespace=test-application-dev
              summary: CronJob is failing.

  # example two - three jobs (from the same cronjob) have run, the first two failed, the last one succeeded
  - interval: 5m
    input_series:
      - series: 'kube_job_status_failed{job="kube-state-metrics", job_name="test-application-cronjob-1", namespace="test-application-dev", reason="BackoffLimitExceeded"}'
        values: '1+0x12'
      - series: 'kube_job_status_start_time{job="kube-state-metrics", job_name="test-application-cronjob-1", namespace="test-application-dev"}'
        values: '0+0x12'
      - series: 'kube_job_owner{job="kube-state-metrics", job_name="test-application-cronjob-1", namespace="test-application-dev", owner_kind="CronJob", owner_name="test-application-cronjob"}'
        values: '1+0x12'
      - series: 'kube_cronjob_spec_suspend{cronjob="test-application-cronjob", job="kube-state-metrics", namespace="test-application-dev"}'
        values: '0+0x12'

      - series: 'kube_job_status_failed{job="kube-state-metrics", job_name="test-application-cronjob-2", namespace="test-application-dev", reason="DeadLineExceeded"}'
        values: '1+0x12'
      - series: 'kube_job_status_start_time{job="kube-state-metrics", job_name="test-application-cronjob-2", namespace="test-application-dev"}'
        values: '900+0x12'
      - series: 'kube_job_owner{job="kube-state-metrics", job_name="test-application-cronjob-2", namespace="test-application-dev", owner_kind="CronJob", owner_name="test-application-cronjob"}'
        values: '1+0x12'
      - series: 'kube_cronjob_spec_suspend{cronjob="test-application-cronjob", job="kube-state-metrics", namespace="test-application-dev"}'
        values: '0+0x12'

      - series: 'kube_job_status_failed{job="kube-state-metrics", job_name="test-application-cronjob-3", namespace="test-application-dev"}'
        values: '0+0x12'
      - series: 'kube_job_status_start_time{job="kube-state-metrics", job_name="test-application-cronjob-3", namespace="test-application-dev"}'
        values: '1800+0x12'
      - series: 'kube_job_owner{job="kube-state-metrics", job_name="test-application-cronjob-3", namespace="test-application-dev", owner_kind="CronJob", owner_name="test-application-cronjob"}'
        values: '1+0x12'
      - series: 'kube_cronjob_spec_suspend{cronjob="test-application-cronjob", job="kube-state-metrics", namespace="test-application-dev"}'
        values: '0+0x12'

    promql_expr_test:
      # assert we're getting the timestamp of the last ran job...
      - expr: job:kube_job_status_start_time_test_application_dev:max
        eval_time: 0m
        exp_samples:
          - labels: 'job:kube_job_status_start_time_test_application_dev:max{cronjob="test-application-cronjob", job="test-application-cronjob-3", job_name="test-application-cronjob-3", namespace="test-application-dev", owner_name="test-application-cronjob"}'
            value: 1800

      # assert that the last ran job did not fail (we expect nil from the rule)
      - expr: job:kube_job_status_failed_test_application_dev:sum
        eval_time: 0m
        exp_samples: []

    alert_rule_test:
      # check that the CronJobStatusFailed alert is NOT firing
      - eval_time: 60m
        alertname: CronJobStatusFailed
        exp_alerts: []
