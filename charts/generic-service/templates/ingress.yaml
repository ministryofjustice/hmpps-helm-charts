{{- if .Values.ingress.enabled -}}
{{- $fullName := include "generic-service.fullname" . -}}
{{- $svcPort := .Values.service.port -}}
apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
  name: {{ $fullName }}
  labels:
    {{- include "generic-service.labels" . | nindent 4 }}
  annotations:
  {{- with .Values.ingress.annotations }}
    {{- toYaml . | nindent 4 }}
  {{- end }}
  {{- if .Values.allowlist }}
    nginx.ingress.kubernetes.io/whitelist-source-range: {{ include "app.joinListWithComma" .Values.allowlist | quote }}
  {{- end }}
    external-dns.alpha.kubernetes.io/set-identifier: {{ $fullName }}-{{ .Release.Namespace }}-{{ .Values.ingress.contextColour }}
  {{- if .Values.ingress.modsecurity_enabled }}
    kubernetes.io/ingress.class: "modsec01"
    nginx.ingress.kubernetes.io/enable-modsecurity: "true"
    nginx.ingress.kubernetes.io/modsecurity-snippet: |
{{ .Values.ingress.modsecurity_snippet | indent 6 }}
  {{- else }}
    kubernetes.io/ingress.class: "nginx"
  {{- end }}
spec:
  tls:
  - hosts:
    - {{ .Values.ingress.host }}
    {{ if .Values.ingress.tlsSecretName }}secretName: {{ .Values.ingress.tlsSecretName }}{{ end }}
  rules:
    - host: {{ .Values.ingress.host }}
      http:
        paths:
          - path: {{ .Values.ingress.path }}
            backend:
              serviceName: {{ $fullName }}
              servicePort: {{ .Values.service.port }}
{{- end }}
