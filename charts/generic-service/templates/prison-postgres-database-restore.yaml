{{- if .Values.postgresDatabaseRestore.enabled -}}
{{- /*
This template creates a shell script config map and a cronjob (running every 4 hours).  It should only be enabled in
the production namespace in order to copy the production database to pre-production.  This is so that the production
secrets aren't exposed outside the production namespace.  The pre-production secrets should be injected by the cloud
platform environments repo into the production namespace instead.

The script calls Prison API in pre-production to determine the last NOMIS database restore and if it was more recent
than the saved restore date then a new backup is created.
*/}}
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: postgres-restore-script
  labels:
    {{- include "generic-service.labels" . | nindent 4 }}
data:
  entrypoint.sh: |-
{{ .Files.Get "prison-postgres-restore.sh" | indent 4 }}

---

apiVersion: batch/v1
kind: CronJob
metadata:
  name: {{ (.Values.postgresDatabaseRestore.jobName) | default (printf "%s-postgres-restore" (include "generic-service.fullname" .)) }}
  labels:
    {{- include "generic-service.labels" . | nindent 4 }}
spec:
  schedule: "30 6-21/4 * * 1-5" # At minute 30 past every 4th hour from 6am through 9pm UTC Monday-Friday
  concurrencyPolicy: "Forbid"
  successfulJobsHistoryLimit: 5
  failedJobsHistoryLimit: 5
  jobTemplate:
    spec:
      # Tidy up all jobs after 4 days
      ttlSecondsAfterFinished: 345600
      backoffLimit: 0
      activeDeadlineSeconds: {{ (.Values.postgresDatabaseRestore.timeout) | default 2400 }}
      template:
        spec:
          containers:
            - name: postgres-restore
              image: "{{ .Values.postgresDatabaseRestore.image }}:{{ .Values.postgresDatabaseRestore.tag }}"
              command:
                - /bin/entrypoint.sh
              volumeMounts:
                - name: postgres-restore-script
                  mountPath: /bin/entrypoint.sh
                  readOnly: true
                  subPath: entrypoint.sh
            {{- if .Values.postgresDatabaseRestore.storageRequest -}}
              resources:
                requests:
                  ephemeral-storage: {{ (.Values.postgresDatabaseRestore.storageRequest) }}
                limits:
                  ephemeral-storage: {{ (.Values.postgresDatabaseRestore.storageRequest) | (.Values.postgresDatabaseRestore.storageLimit) }}
            {{- end }}
              securityContext:
                {{- toYaml .Values.postgresDatabaseRestore.securityContext | nindent 16 }}
    {{- include "postgresRestore.envs" .Values | nindent 14 }}
          restartPolicy: "Never"
          volumes:
            - name: postgres-restore-script
              configMap:
                name: postgres-restore-script
                defaultMode: 0755
{{- end }}
