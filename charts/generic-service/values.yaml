---
# Default values for generic-service.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 4

image:
  repository: example_repo/example_image
  pullPolicy: IfNotPresent
  # image tag is overridden at deployment time using helm "--set" option
  tag: "example_app_version"

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

# override docker image CMD
containerArgs: []

# override docker image ENTRYPOINT
containerCommand: []

serviceAccountName: ""

podAnnotations: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  enabled: true
  type: ClusterIP
  port: 80

ingress:
  enabled: false
  # if not hosted in Cloud Platform (e.g. digital studio hosting) then you might need to use
  # the dso controller with a different ingress class name annotation instead.
  dso_enabled: false
  annotations:
    nginx.ingress.kubernetes.io/custom-http-errors: "418"
  # 'host' only remains for backwards compatibility. 'hosts' should be used instead
  # One entry in 'hosts'/'host' needs to be no larger than 64 chars if you want a functioning cert.
  # that entry will be used as the CN for the cert, the others will be SANs. This allows you to have
  # long, intelligible DNS names (SANs).
  host: chart-example.local
  hosts: []
  path: /
  tlsSecretName: chart-example-tls
  modsecurity_enabled: false
  modsecurity_audit_enabled: false
  modsecurity_snippet: |
    SecRuleEngine On
    {{ if .Values.ingress.modsecurity_audit_enabled -}}
    SecAuditEngine RelevantOnly
    SecAuditLog /var/log/nginx/error.log
    SecAuditLogType Serial
    {{ end -}}
    SecRuleUpdateActionById 949110 "t:none,deny,status:406,logdata:%{SERVER_NAME}"
    SecRuleUpdateActionById 959100 "t:none,deny,status:406,logdata:%{SERVER_NAME}"
    SecAction \
      "id:900000,\
       phase:1,\
       nolog,\
       pass,\
       t:none,\
       setvar:tx.paranoia_level=2"

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

poddisruptionbudget:
  enabled: true
  minAvailable: 1

nodeSelector: {}

tolerations: []

affinity: {}

livenessProbe:
  httpGet:
    path: /health/liveness
    port: http
  initialDelaySeconds: 30
  periodSeconds: 10
  timeoutSeconds: 10
  failureThreshold: 10

readinessProbe:
  httpGet:
    path: /health/readiness
    port: http
  initialDelaySeconds: 30
  periodSeconds: 10
  timeoutSeconds: 10
  failureThreshold: 10

strategy:
  type: RollingUpdate
  rollingUpdate:
    maxSurge: 100%
    maxUnavailable: 0

custommetrics:
  enabled: false
  scrapeInterval: 15s
  metricsPath: /metrics
  metricsPort: http

postgresDatabaseRestore:
  enabled: false
# Required environment secrets for the restore script:
#  namespace_secrets:
#    dps-rds-instance-output:
#      DB_NAME: "database_name"
#      DB_USER: "database_username"
#      DB_PASS: "database_password"
#      DB_HOST: "rds_instance_address"
#    dps-rds-instance-output-preprod:
#      DB_NAME_PREPROD: "database_name"
#      DB_USER_PREPROD: "database_username"
#      DB_PASS_PREPROD: "database_password"
#      DB_HOST_PREPROD: "rds_instance_address"
